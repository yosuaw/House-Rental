/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package serverapp_rental;

import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.TargetDataLine;
import javax.swing.JOptionPane;

/**
 *
 * @author Laptop
 */
public class FormCallServer extends javax.swing.JFrame implements Runnable {

    MulticastSocket socket;
    TargetDataLine line;
    Thread t;
    boolean status = true;
    InetAddress addr;
    AudioFormat format;

    /**
     * Creates new form FormCall
     */
    public FormCallServer() {
        initComponents();
        setLocationRelativeTo(null);
    }

    @Override
    public void run() {
        while (true) {
            try {
                call();
            } catch (Exception ex) {
                System.out.println("formCallServer run error = " + ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtStatus = new javax.swing.JTextArea();
        btnEndCall = new javax.swing.JButton();
        btnStartCall = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtStatus.setEditable(false);
        txtStatus.setColumns(20);
        txtStatus.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        txtStatus.setRows(5);
        jScrollPane1.setViewportView(txtStatus);

        btnEndCall.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnEndCall.setText("End Call");
        btnEndCall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEndCallActionPerformed(evt);
            }
        });

        btnStartCall.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnStartCall.setText("Start Call");
        btnStartCall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartCallActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnStartCall)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEndCall)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEndCall)
                    .addComponent(btnStartCall))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void call() {
        try {
            if (status == true) {
                System.setProperty("java.net.preferIPv4Stack", "true");

                AudioFormat.Encoding encoding = AudioFormat.Encoding.PCM_SIGNED;
                float rate = 44100.0f; //44100
                int channels = 2;
                int sampleSize = 16;
                boolean bigEndian = false;

                int port = 50005;

                txtStatus.append("Panggilan telah tersambung.\n");

                format = new AudioFormat(encoding, rate, sampleSize, channels, (sampleSize / 8) * channels, rate, bigEndian);
                
                DataLine.Info info = new DataLine.Info(TargetDataLine.class, format);
                if (!AudioSystem.isLineSupported(info)) {
                    System.out.println("Line matching " + info + " not supported.");
                    return;
                }

                line = (TargetDataLine) AudioSystem.getLine(info);                
                line.open(format);               
                line.start();

                byte[] data = new byte[9728]; //4096

                addr = InetAddress.getByName("225.6.7.8");
                socket = new MulticastSocket();

                while (status == true) {
                    // Read the next chunk of data from the TargetDataLine.
                    line.read(data, 0, data.length);
                    // Save this chunk of data.
                    DatagramPacket dgp = new DatagramPacket(data, data.length, addr, port);

                    socket.send(dgp);
                }
            }

        } catch (Exception e) {
            System.out.println("Audio Server error: " + e);
        }
    }

    private void btnEndCallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEndCallActionPerformed
        status = false;
        addr = null;
        format = null;
        line.close();
        socket = null;
        this.setVisible(false);
    }//GEN-LAST:event_btnEndCallActionPerformed

    private void btnStartCallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartCallActionPerformed
        status = true;
        try {
            if (t == null) {
                t = new Thread(this, "Audio Server");
                t.start();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "error koneksi audio: " + ex);
        }
    }//GEN-LAST:event_btnStartCallActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCallServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCallServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCallServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCallServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCallServer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEndCall;
    private javax.swing.JButton btnStartCall;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtStatus;
    // End of variables declaration//GEN-END:variables
}
